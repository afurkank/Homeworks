for(int j = 0; j < faces.size(); j++){
    int v0 = faces[j].vertexIds[0];
    int v1 = faces[j].vertexIds[1];
    int v2 = faces[j].vertexIds[2];

    Vec3* vertex0 = vertices[v0];
    Vec3* vertex1 = vertices[v1];
    Vec3* vertex2 = vertices[v2];

    double tE = 0, tL = 1;
    bool visib = false;

    double x_0 = vertex0->x, y_0 = vertex0->y, z_0 = vertex0->z;
    double x_1 = vertex1->x, y_1 = vertex1->y, z_1 = vertex1->z;
    double x_2 = vertex2->x, y_2 = vertex2->y, z_2 = vertex2->z;

    double d_x, d_y, d_z;
    double x_min, x_max, y_min, y_max, z_min, z_max;
    // TODO CALCULATE ABOVE VALUES
    double x_1, y_1, z_1;
    if(visible(d_x, x_min - x_0, tE, tL)){
        if(visible(-d_x, x_0 - x_max, tE, tL)){
            if(visible(d_y, y_min - y_0, tE, tL)){
                if(visible(-d_y, y_0 - y_max, tE, tL)){
                    if(visible(d_z, z_min - z_0, tE, tL)){
                        if(visible(-d_z, z_0 - z_max, tE, tL)){
                            visib = true;
                            if(tL < 1){
                                x_1 = x_0 + d_x * tL;
                                y_1 = y_0 + d_y * tL;
                                z_1 = z_0 + d_z * tL;
                            }
                            if(tE > 0){
                                x_0 = x_0 + d_x * tE;
                                y_0 = y_0 + d_y * tE;
                                z_0 = z_0 + d_z * tE;
                            }
                        }
                    }
                }
            }
        }
    }
}